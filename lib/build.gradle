plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.avast.gradle.docker-compose' version '0.14.3'
    id 'org.sonarqube'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.dokka' version "$dokka_version"
}

apply from: 'maven-push.gradle'
apply from: '../jacoco.gradle'
apply from: '../sonarqube.gradle'

android {
    compileSdkVersion 33

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        // for robolectric
        testOptions.unitTests.includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
    namespace 'com.what3words.androidwrapper'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.core:core-ktx:$androidx_core_version"
    // kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_version"

    // w3w java wrapper
    api "com.what3words:w3w-java-wrapper:$what3words_java_wrapper_version"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // testing
    testImplementation "junit:junit:$junit_version"
    testRuntimeOnly "androidx.test:core:$androidx_test_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "androidx.arch.core:core-testing:$android_arch_testing_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.json:json:$json_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}